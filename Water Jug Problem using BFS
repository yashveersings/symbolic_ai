def pour(glasses,glass1,glass2):
    copy=list(glasses)
    amount=min(copy[glass1],capacity[glass2]-copy[glass2])
    copy[glass1]-=amount
    copy[glass2]+=amount
    return tuple(copy)

def bfs(glasses,goal):
    stack=[glasses]
    visited=set()
    
    while stack:
        current=stack.pop()
        
        if current in visited:
            continue
        
        visited.add(current)
        
        print(current)
        
        if current==goal:
            return True
        
        for i in range(len(glasses)):
            for j in range(len(glasses)):
                if i!=j:
                    new_state=pour(current,i,j)
                    if new_state not in visited:
                        stack.append(new_state)
    return False

capacity=(8,5,3)
current=(8,0,0)
goal=(4,4,0)
bfs(current,goal)
