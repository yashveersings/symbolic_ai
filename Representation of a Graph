import numpy as np
class graph:
    def __init__(self,Nodes):
        self.nodes=Nodes;
        self.adj_list={}
        for node in self.nodes:
            self.adj_list[node]=[]
        self.adj_matrix=np.zeros((len(self.nodes),len(self.nodes)))
    def add_edge(self,u,v):
        self.adj_list[u].append(v)
        self.adj_list[v].append(u)
        self.adj_matrix[self.nodes.index(u)][self.nodes.index(v)]=1
    def print_graph(self):
        for node in self.nodes:
            print(node,'->',self.adj_list[node])
        for row in self.adj_matrix:
            print(row)
num_nodes=int(input("Enter number of rows"))
num_edges=int(input("Enter number of edges"))
Nodes=[]
all_edges=[]
for i in range (num_nodes):
    node=input("Enter node: ")
    Nodes.append(node)
for i in range (num_edges):
    edges=input("Enter edges in the form (u,v)")
    u,v=edges.split()
    all_edges.append((u,v))
g1=graph(Nodes)
for u,v in all_edges:
    g1.add_edge(u,v)
g1.print_graph()
